@page "/"
@using Bookstore.Shared.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<h1><strong>Available books:</strong></h1>
@if (books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        @foreach (var book in books)
        {
            <tr>
                <td class="image">
                    <img src="@book.Cover" />
                </td>
                <td class="text">
                    @if (book.Series != null)
                    {
                        <p style="font-size: 30px">@book.Series vol @book.Number</p>
                    }
                    <p style="font-size: 30px">@book.Title</p>
                    <p style="font-size: 25px">@string.Join(", ", book.Authors)</p>
                    @if (!book.isAvailable())
                    {
                        <p style="color: #a6a6a6">
                            @book.Status
                        </p>
                    }
                    else
                    {
                        <p style="color: #6600ff">
                            @book.Status
                        </p>
                    }
                    <div style="text-align: left">@string.Join(" ", book.Genres)</div>

                </td>
                <td class="buttons">
                    <button class="details" @onclick="@(() => { OpenDetails(book.BookId); })" />
                    <button class="comments" />
                    <button class="cart" />
                </td>
            </tr>
        }
    </table>
}

@code{
    private RetrieveBook[] books;
    private string user;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            user = authState.User.Identity.Name;
            books = await Http.GetFromJsonAsync<RetrieveBook[]>("books");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private void OpenDetails(int id)
    {
        navigationManager.NavigateTo($"/details/{id}");
    }

}

<style>

    img {
        width: 110%;
        height: 110%;
    }

    h1 {
        text-align: center;
        font-family: 'Poppins', sans-serif;
    }

    table {
        width: 60%;
        border-collapse: separate;
        border-spacing: 0 10px;
        margin-left: auto;
        margin-right: auto;
    }

    tr {
        border-spacing: 10px;
        vertical-align: top;
        text-align: left;
        font-family: 'Poppins', sans-serif;
        font-weight: bold;
        font-size: 20px;
        padding: 10px;
    }

    td {
        border: 2px solid;
        border-style: solid none;
        border-color: #a6a6a6;
        padding: 11px;
    }

    .buttons {
        width: 20%;
    }

    td:first-child {
        border-left-style: solid;
        border-top-left-radius: 11px;
        border-bottom-left-radius: 11px;
        border-color: #a6a6a6;
    }

    td:last-child {
        border-right-style: solid;
        border-bottom-right-radius: 11px;
        border-top-right-radius: 11px;
        border-color: #a6a6a6;
    }

    td {
        padding: 20px;
    }

        td.image {
            width: 230px;
        }

    button {
        padding: 0px;
        border: none;
        border-radius: 50%;
    }

    .details {
        background-image: url(/Images/InactiveArrow.PNG);
        background-size: cover;
        width: 75px;
        height: 75px;
    }

        .details:hover {
            background-image: url(/Images/ActiveArrow.PNG);
            background-size: cover;
            width: 75px;
            height: 75px;
        }

    .comments {
        background-image: url(/Images/InactiveComment.PNG);
        background-size: cover;
        width: 75px;
        height: 75px;
    }

        .comments:hover {
            background-image: url(/Images/ActiveComment.PNG);
            background-size: cover;
            width: 75px;
            height: 75px;
        }

    .cart {
        background-image: url(/Images/InactiveBasket.PNG);
        background-size: cover;
        width: 75px;
        height: 75px;
    }

        .cart:hover {
            background-image: url(/Images/ActiveBasket.PNG);
            background-size: cover;
            width: 75px;
            height: 75px;
        }
</style>
